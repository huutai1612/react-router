{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.jsx"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","NewCommentForm","quoteId","commentTextRef","useRef","history","useHistory","useHttp","addComment","sendRequest","status","error","useEffect","push","submitFormHandler","event","preventDefault","commentData","current","value","length","alert","LoadingSpinner","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","getAllComments","data","dataTransformed","result","key","transformData","commentList","map","comment","index","comments","onClick","list","HighlightedQuote","props","quote","text","author","QuoteDetail","getSingleQuote","loadedQuote","useParams","routeMatch","useRouteMatch","path","exact","url"],"mappings":"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","file":"static/js/4.734f8c7c.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={classes.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<Link to='/new-quote' className='btn'>\n\t\t\t\tAdd a Quote\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__LFTz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3YgKQ\",\"list\":\"Comments_list__Hwufv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1Wfn3\",\"loading\":\"NewCommentForm_loading__3PSaB\",\"control\":\"NewCommentForm_control__2p5Bl\",\"actions\":\"NewCommentForm_actions__2zCCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3HM8k\"};","import { useEffect, useRef } from 'react';\r\nimport { addComment } from '../../lib/api';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport classes from './NewCommentForm.module.css';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\n\r\nconst isNotEmpty = (data) => data.length >= 10;\r\n\r\nconst NewCommentForm = ({ quoteId }) => {\r\n\tconst commentTextRef = useRef();\r\n\tconst history = useHistory();\r\n\tconst { sendRequest, status, error } = useHttp(addComment);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'completed') {\r\n\t\t\thistory.push(`/quotes/${quoteId}`);\r\n\t\t}\r\n\t}, [status, history, quoteId]);\r\n\r\n\tconst submitFormHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst commentData = commentTextRef.current.value;\r\n\r\n\t\t// optional: Could validate here\r\n\t\tif (!isNotEmpty(commentData)) {\r\n\t\t\talert(`Comment must be at least 10 characters long`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// send comment to server\r\n\t\tsendRequest({ quoteId, commentData });\r\n\t};\r\n\r\n\tif (error) {\r\n\t\treturn <p className='centered focused'>{error}</p>;\r\n\t}\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\r\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\r\n\t\t\t\t<label htmlFor='comment'>Your Comment</label>\r\n\t\t\t\t<textarea id='comment' rows='5' ref={commentTextRef}></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.actions}>\r\n\t\t\t\t<button className='btn'>Add Comment</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default NewCommentForm;\r\n","import { Fragment, useEffect, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst transformData = (data) => {\n\tlet result = [];\n\n\tfor (let key in data) {\n\t\tresult.push(data[key]);\n\t}\n\n\treturn result;\n};\n\nconst Comments = ({ quoteId }) => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\n\tconst { sendRequest, data, error, status } = useHttp(getAllComments, true);\n\n\tuseEffect(() => sendRequest(quoteId), [sendRequest, quoteId]);\n\n\tconst dataTransformed = transformData(data);\n\n\tif (status === 'pending') {\n\t\treturn (\n\t\t\t<div className='centered'>\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (error) {\n\t\treturn <p className='centered focused'>{error}</p>;\n\t}\n\n\tif (status === 'completed' && dataTransformed.length === 0) {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<p className='centered focused'>Not found any comments</p>\n\t\t\t\t<NewCommentForm quoteId={quoteId} />\n\t\t\t</Fragment>\n\t\t);\n\t}\n\n\tconst commentList = dataTransformed.map((comment, index) => (\n\t\t<p key={index}>{comment}</p>\n\t));\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className='btn' onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && <NewCommentForm quoteId={quoteId} />}\n\t\t\t<div className={classes.list}>{commentList}</div>\n\t\t</section>\n\t);\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nconst QuoteDetail = (props) => {\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tdata: loadedQuote,\r\n\t\tstatus,\r\n\t\terror,\r\n\t} = useHttp(getSingleQuote, true);\r\n\tconst { quoteId } = useParams();\r\n\tconst routeMatch = useRouteMatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(quoteId);\r\n\t}, [sendRequest, quoteId]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className='centered focused'>{error}</p>;\r\n\t}\r\n\r\n\tif (!loadedQuote) {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<NoQuotesFound />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n\t\t\t<Route path={`${routeMatch.path}`} exact>\r\n\t\t\t\t<div className='centered'>\r\n\t\t\t\t\t<Link className='btn--flat ' to={`${routeMatch.url}/comments`}>\r\n\t\t\t\t\t\tLoad Comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${routeMatch.path}/comments`}>\r\n\t\t\t\t<Comments quoteId={quoteId} />\r\n\t\t\t</Route>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}