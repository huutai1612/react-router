{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.jsx"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","loadedQuotes","data","status","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,mCAceA,IAXO,WACrB,OACC,sBAAKC,UAAWC,IAAQC,SAAxB,UACC,iDACA,cAAC,IAAD,CAAMC,GAAG,aAAaH,UAAU,MAAhC,8B,mBCNHI,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCkB5CC,EAhBG,SAACC,GAClB,OACC,qBAAIP,UAAWC,IAAQO,KAAvB,UACC,mCACC,qCACC,4BAAID,EAAME,SAEX,qCAAaF,EAAMG,YAEpB,cAAC,IAAD,CAAMP,GAAE,kBAAaI,EAAMI,IAAMX,UAAU,MAA3C,iC,iBC0CYY,EAvCG,SAACL,GAClB,IAXmBM,EAAQC,EAWrBC,EAAUC,cACVC,EAAWC,cAEXC,EAA6C,QADhC,IAAIC,gBAAgBH,EAASI,QACbC,IAAI,QAYjCC,GA1BaV,EA0BaN,EAAMM,OA1BXC,EA0BmBK,EAzBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC3B,OAAIZ,EACIW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAuBtC,OACC,eAAC,WAAD,WACC,qBAAKX,UAAWC,IAAQ0B,QAAxB,SACC,yBAAQC,QAfiB,WAC3Bb,EAAQc,KAAK,CACZC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAkB,OAAS,UAY3C,kBACOA,EAAkB,aAAe,iBAGzC,oBAAInB,UAAWC,IAAQ8B,KAAvB,SACER,EAAaS,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAECtB,GAAIsB,EAAMtB,GACVD,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMtB,a,gCCDFuB,UAnCG,SAAC3B,GAClB,MAKI4B,YAAQC,KAAc,GAJzBC,EADD,EACCA,YACMC,EAFP,EAECC,KACAC,EAHD,EAGCA,OACAC,EAJD,EAICA,MAOD,OAJAC,qBAAU,WACTL,MACE,CAACA,IAEW,YAAXG,EAEF,qBAAKxC,UAAU,WAAf,SACC,cAAC2C,EAAA,EAAD,MAKCF,EACI,mBAAGzC,UAAU,mBAAb,SAAiCyC,IAG1B,cAAXD,GAA2BF,GAAwC,IAAxBA,EAAaM,OAQrD,cAAC,EAAD,CAAW/B,OAAQyB,IANxB,qBAAKtC,UAAU,WAAf,SACC,cAACD,EAAA,EAAD","file":"static/js/5.26f6b7e6.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={classes.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<Link to='/new-quote' className='btn'>\n\t\t\t\tAdd a Quote\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__LFTz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2-E6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3re0N\",\"sorting\":\"QuoteList_sorting__1SOkJ\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\treturn (\n\t\t<li className={classes.item}>\n\t\t\t<figure>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p>{props.text}</p>\n\t\t\t\t</blockquote>\n\t\t\t\t<figcaption>{props.author}</figcaption>\n\t\t\t</figure>\n\t\t\t<Link to={`/quotes/${props.id}`} className='btn'>\n\t\t\t\tView Fullscreen\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n\treturn quotes.sort((quoteA, quoteB) => {\r\n\t\tif (ascending) {\r\n\t\t\treturn quoteA.id > quoteB.id ? 1 : -1;\r\n\t\t} else {\r\n\t\t\treturn quoteA.id < quoteB.id ? 1 : -1;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst queryParam = new URLSearchParams(location.search);\r\n\tconst isSortAscending = queryParam.get('sort') === 'asc';\r\n\r\n\tconst sortingClickHandler = () => {\r\n\t\thistory.push({\r\n\t\t\tpathname: location.pathname,\r\n\t\t\tsearch: `?sort=${isSortAscending ? 'desc' : 'asc'}`,\r\n\t\t});\r\n\t\t// history.push(\r\n\t\t// \tlocation.pathname + '?sort=' + (isSortAscending ? 'desc' : 'asc'),\r\n\t\t// );\r\n\t};\r\n\r\n\tconst sortedQuotes = sortQuotes(props.quotes, isSortAscending);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className={classes.sorting}>\r\n\t\t\t\t<button onClick={sortingClickHandler}>\r\n\t\t\t\t\tSort {isSortAscending ? 'Descending' : 'Ascending'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul className={classes.list}>\r\n\t\t\t\t{sortedQuotes.map((quote) => (\r\n\t\t\t\t\t<QuoteItem\r\n\t\t\t\t\t\tkey={quote.id}\r\n\t\t\t\t\t\tid={quote.id}\r\n\t\t\t\t\t\tauthor={quote.author}\r\n\t\t\t\t\t\ttext={quote.text}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default QuoteList;\r\n","import QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport useHttp from '../hooks/use-http';\r\nimport { useEffect } from 'react';\r\n\r\nconst AllQuotes = (props) => {\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tdata: loadedQuotes,\r\n\t\tstatus,\r\n\t\terror,\r\n\t} = useHttp(getAllQuotes, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest();\r\n\t}, [sendRequest]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className='centered focused'>{error}</p>;\r\n\t}\r\n\r\n\tif (status === 'completed' && !loadedQuotes && loadedQuotes.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<NoQuotesFound />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}